##Welcome to your SWAY config!##

#Keyboard
input * xkb_layout "gb"

#Variables

# Logo key. Use Mod1 for Alt. Mod4 is the Super Key
set $mod Mod4
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
set $menu wofi -c ~/.config/wofi/config -I

#Font
font pango:Noto Sans Regular 10

# Set inner/outer gaps
gaps inner 2
gaps outer 0



# Status Bar:

# Read `man 5 sway-bar` for more information about this section.
bar {
   swaybar_command waybar
#}

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
    timeout 1070 'swaylock -f -C ~/.config/swaylock/config'\
    timeout 770 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"' \
    before-sleep 'swaylock -C ~/.config/swaylock/config'
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
 

# Screenlocking
bindsym $mod+f1 exec ~/.config/sway/scripts/lockman.sh


# Screenshot with grim and swappy
bindsym print exec ~/.config/sway/scripts/screenshotFull.sh
bindsym Shift+print exec ~/.config/sway/scripts/screenshotArea.sh



### Input configuration
#
# Example configuration:
#
   input "1267:12377:ELAN1300:00_04F3:3059_Touchpad" {
       dwt enabled
       tap enabled
       natural_scroll enabled
       middle_emulation enabled
   }
   # Wacom tablet configuration
   input "1386:884:Wacom_Intuos_S_Pad" map_to_output HDMI-A-1
   input "1386:884:Wacom_Intuos_S_Pen" map_to_output HDMI-A-1

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# thin borders:
hide_edge_borders both

# Use Mouse+$mod to drag floating windows to their wanted position:
floating_modifier $mod

# start a terminal:
bindsym $mod+Return exec alacritty

# kill focused window:
bindsym $mod+c kill

# Start your launcher
bindsym $mod+o exec $menu

# change focus:
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+u focus up
bindsym $mod+ntilde focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window:
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+ntilde move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation:
bindsym $mod+h split h

# split in vertical orientation:
bindsym $mod+v split v

# enter fullscreen mode for the focused container:
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split):
bindsym $mod+Shift+s layout stacking  
bindsym $mod+Shift+w layout tabbed
bindsym $mod+Shift+e layout toggle split

# toggle tiling / floating:
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows:
bindsym $mod+space focus mode_toggle

# focus the parent container:
bindsym $mod+a focus parent

# autostart start applications + bind program to workspace (uncomment to autostart):
for_window [app_id="Alacritty"] move to workspace 1
#exec alacritty

for_window [app_id=firefox] move to workspace 2
#exec firefox

for_window [app_id=thunar] move to workspace 3
#exec thunar

for_window [app_id=geany] move to workspace 4
#exec geany

# Scratchpad:

# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

#Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad
	
#Show the next scratchpad window or hide the focused scratchpad window.
#If there are multiple scratchpad windows, this command cycles through them.
   
bindsym alt+tab scratchpad show
bindsym $mod+minus scratchpad show

#Autostart File

include ~/.config/sway/autostart


# set floating (nontiling)for apps needing it:
for_window [class="Yad" instance="yad"] floating enable
for_window [class="Galculator" instance="galculator"] floating enable
for_window [class="Blueberry.py" instance="blueberry.py"] floating enable


# set floating (nontiling) for special apps:
for_window [class="Xsane" instance="xsane"] floating enable
for_window [class="Pavucontrol" instance="pavucontrol"] floating enable
for_window [class="qt5ct" instance="qt5ct"] floating enable
for_window [class="Blueberry.py" instance="blueberry.py"] floating enable
for_window [class="Bluetooth-sendto" instance="bluetooth-sendto"] floating enable
for_window [class="Pamac-manager"] floating enable

# Title format for windows
for_window [shell="xdg_shell"] title_format "%title (%app_id)"
for_window [shell="x_wayland"] title_format "%class - %title"

#Remove Titlebars
for_window [class="^.*"] border pixel 1

# resize floating windows with mouse scroll:
bindsym --whole-window --border $mod+button4 resize shrink height 5 px or 5 ppt
bindsym --whole-window --border $mod+button5 resize grow height 5 px or 5 ppt
bindsym --whole-window --border $mod+shift+button4 resize shrink width 5 px or 5 ppt
bindsym --whole-window --border $mod+shift+button5 resize grow width 5 px or 5 ppt

#Switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10


#Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10

# reload the configuration file:
bindsym $mod+Shift+c reload

#App shortcuts
bindsym $mod+w exec "/usr/bin/firefox"
bindsym $mod+n exec "/usr/bin/thunar"

#Colours and Border
set $bg-color            #2f343f
set $inactive-bg-color   #2f343f
set $text-color          #f3f4f5
set $inactive-text-color #676e7d
set $urgent-bg-color     #e53935
set $indicator-color     #a0a0a0

# set window colors:
#                       border             background         text                 indicator
client.focused          $bg-color          $bg-color          $text-color          $indicator-color
client.unfocused        $inactive-bg-color $inactive-bg-color $inactive-text-color $indicator-color
client.focused_inactive $inactive-bg-color $inactive-bg-color $inactive-text-color $indicator-color
client.urgent           $urgent-bg-color   $urgent-bg-color   $text-color          $indicator-color

default_border pixel 4

# Special keys

bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume 0 +3%
bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume 0 -3%
bindsym --locked XF86AudioMute exec pactl set-sink-mute 0 toggle

bindsym XF86MonBrightnessUp exec brightnessctl -c backlight set +5%
bindsym XF86MonBrightnessDown exec brightnessctl -c backlight set 5%-

bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

#GTK3 Theme and Icons. Set QT themes in qt5ct
#set $gnome-schema org.gnome.desktop.interface
#exec_always {
#    gsettings set $gnome-schema gtk-theme 'Arc-Dark'
#    gsettings set $gnome-schema icon-theme 'Papirus-Dark'
#}

